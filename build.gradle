plugins {
    id 'groovy'
}

sourceSets {
    main {
        groovy {
            srcDirs = ['src', 'vars']
        }
        resources {
            srcDirs = ['resources']
        }
    }
    test {
        groovy {
            srcDirs = ['test']
        }
    }
}

repositories {
    jcenter()
    mavenLocal()
    maven {
        url "https://repo.jenkins-ci.org/releases/"
    }
}

dependencies {
    compile group: 'com.hynnet', name: 'json-lib', version: '2.4'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
    compile group: 'org.eclipse.hudson', name: 'hudson-core', version: '3.3.3', { exclude group: 'org.eclipse.hudson', module: 'hudson-remoting' }
    compile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.0.1'
    compile group: 'com.cloudbees', name: 'groovy-cps', version: '1.31'
    compile group: 'org.jenkins-ci.plugins', name: 'job-dsl-core', version: '1.77'
    compile group: 'org.codehaus.groovy', name: 'groovy-all', version: '3.0.6'

    testCompile group: 'com.lesfurets', name: 'jenkins-pipeline-unit', version: '1.7'
    testCompile group: 'org.jenkins-ci.plugins.workflow', name: 'workflow-job', version: '2.40'
    testCompile group: 'junit', name: 'junit', version: '4.13'
}

test {
    dependsOn cleanTest

    //Dejar en true para ignorar posible fallo en la ejecución.
    ignoreFailures = false

    testLogging.maxGranularity = 0

    //Habilitar solo para depurar con mensajes println dentro del método y mostrarlos durante gradlew test.
    onOutput { dest, event -> print event.message }

    def results = []
    afterTest { desc, result ->
        println "${desc.className.split("\\.")[-1]}: " +
            "${desc.name}: ${result.resultType}"
    }
    afterSuite { desc, result ->
        if (desc.className) { results << result }
    }

    doLast {
        println "Tests: ${results.sum { it.testCount }}" +
            ", Fallidos: ${results.sum { it.failedTestCount }}" +
            ", Errores: ${results.sum { it.exceptions.size() }}" + 
            ", Omitidos: ${results.sum { it.skippedTestCount }}" 
    }
}
